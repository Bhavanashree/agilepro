<testSuite xmlns:ccg="/fw/ccg/XMLBeanParser" xmlns:wrap="/fw/ccg/XMLBeanParser/wrap" name="storyHeirarchy">

<!--  
 	<testCase name="storyAdd">
	
		<description>Add new story</description>
		
		<wrap:steps>
			<ccg:gotoState state="story" />
			
			<ccg:waitFor locator="id: storyTab" />
			<ccg:click locator="id: storyTab" />
			
			<ccg:waitFor locator="id: addNewBacklogId" />
			<ccg:click locator="id: addNewBacklogId" />
		</wrap:steps>
		
		<ccg:fillFormWithAction locator="id: addNewBacklogId" pressEnterAtEnd="true">
			<data ccg:beanType="com.yukthi.ccg.xml.DynamicBean">
				<newBacklogTitle>Story1</newBacklogTitle>
			</data>
		</ccg:fillFormWithAction>
		

		<wrap:validations>
			<ccg:validateVisibility locator="id: addNewBacklogId" />
		</wrap:validations>
		
	</testCase>
-->		

<!--
	<testCase name="storyDelete">
		
		<description>Delete story</description>
		
		<wrap:steps>
			<ccg:loadQueryMap keyColumn="TITLE" valueColumn="ID" contextAttribute="storyTitleToId" 
				dataSourceName="dataSource">
				<query>
					SELECT TITLE, ID
					FROM STORY
					WHERE TITLE IN ('Story1')
				</query>
			</ccg:loadQueryMap>
		
			<ccg:gotoState state="story" />
			
			<ccg:waitFor locator="id: storyTab" />
			<ccg:click locator="id: storyTab" />
			
			<ccg:waitFor locator="id: delete_{{storyTitleToId.Story1}}"/>
			<ccg:click locator="id: delete_{{storyTitleToId.Story1}}"/>
			
			<ccg:waitFor locator="xpath: //*[@id='webutilsConfirmDialog']//button[contains(@class, 'btn btn-primary action-button')]" />
			<ccg:click locator="xpath: //*[@id='webutilsConfirmDialog']//button[contains(@class, 'btn btn-primary action-button')]" />
			
		</wrap:steps>
		
		<wrap:validations>
			<ccg:validateVisibility locator="id: addNewBacklogId" />
		</wrap:validations>
		
	</testCase>
-->	
	
	
	
<!-- 	<testCase name="editStory">
	
		<description>Edit story</description>
		
		<wrap:steps>
			<ccg:loadQueryMap keyColumn="TITLE" valueColumn="ID" contextAttribute="storyTitleToId" 
				dataSourceName="dataSource">
				<query>
					SELECT TITLE, ID
					FROM STORY
					WHERE TITLE IN ('Story1')
				</query>
			</ccg:loadQueryMap>
		
			<ccg:gotoState state="story" />
			
			<ccg:waitFor locator="id: storyTab" />
			<ccg:click locator="id: storyTab" />
			
			<ccg:waitFor locator="id: edit_{{storyTitleToId.Story1}}"/>
			<ccg:click locator="id: edit_{{storyTitleToId.Story1}}"/>
			
			<ccg:waitFor locator="id: storyDialogId"/>
			<ccg:fillForm locator="id: storyDialogId">
				<data ccg:beanType="com.yukthi.ccg.xml.DynamicBean">
					<title>Story2</title>
				</data>
			</ccg:fillForm>
			<ccg:waitFor locator="xpath: //div[@id='storyDialogId']//button[contains(@class, 'btn btn-primary action-button ng-binding')]" />
			<ccg:click locator="xpath: //div[@id='storyDialogId']//button[contains(@class, 'btn btn-primary action-button ng-binding')]" />
			
		</wrap:steps>
		
		<wrap:validations>
			<ccg:validateVisibility locator="id: addNewBacklogId" />
		</wrap:validations>
		
	</testCase> -->
	

	<testCase name="childStoryAdd">
	
		<description>Add child story</description>
		
		<wrap:steps>
			<ccg:loadQueryMap keyColumn="TITLE" valueColumn="ID" contextAttribute="storyTitleToId" 
				dataSourceName="dataSource">
				<query>
					SELECT TITLE, ID
					FROM STORY
					WHERE TITLE IN ('Story1')
				</query>
			</ccg:loadQueryMap>
			
			<ccg:gotoState state="story"/>
			
			<ccg:waitFor locator="id: storyTab" />
			<ccg:click locator="id: storyTab" />
			
			<ccg:waitFor locator="id: addChildStory_{{storyTitleToId.Story1}}" />
			<ccg:click locator="id: addChildStory_{{storyTitleToId.Story1}}" />
			
			<ccg:fillFormWithAction locator="id: addChildStory_{{storyTitleToId.Story1}}" pressEnterAtEnd="true">
				<data ccg:beanType="com.yukthi.ccg.xml.DynamicBean">
					<childTitle>Child story1</childTitle>
				</data>
			</ccg:fillFormWithAction>
		</wrap:steps>

		<wrap:validations>
			<ccg:validateVisibility locator="id: addNewBacklogId" />
		</wrap:validations>
		
	</testCase>
		
</testSuite>